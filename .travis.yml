# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

sudo: required
dist: trusty

services:
  - docker

cache:
  ccache: true
  directories:
    - $HOME/.m2  # Maven

git:
  # ARROW-3083: We use a higher clone depth to also have the latest tag in the cloned history.
  depth: 250


before_install:
  # Common pre-install steps for all builds
  - eval "${MATRIX_EVAL}"
  - ulimit -c unlimited -S
  - |
      if [ $TRAVIS_OS_NAME == "linux" ]; then
        sudo bash -c "echo -e 'Acquire::Retries 10; Acquire::http::Timeout \"20\";' > /etc/apt/apt.conf.d/99-travis-retry"
        sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
        sudo apt-get update -qq
      fi
  - eval `python $TRAVIS_BUILD_DIR/ci/detect-changes.py`


matrix:
  fast_finish: true
  allow_failures:
  - jdk: oraclejdk9
  include:
  - name: "Lint C++, Python, R"
    os: linux
    language: python
    python: "3.6"
    env:
    - ARROW_TRAVIS_CLANG_FORMAT=1
    before_script:
    # Always run RAT checks, in case another build in matrix breaks RAT
    - $TRAVIS_BUILD_DIR/ci/travis_release_audit.sh
    - $TRAVIS_BUILD_DIR/ci/travis_install_clang_tools.sh
    script:
    - $TRAVIS_BUILD_DIR/ci/travis_lint.sh
  - name: "C++ unit tests w/ Valgrind, clang 6.0"
    language: cpp
    os: linux
    env:
    - ARROW_TRAVIS_VALGRIND=1
    - ARROW_TRAVIS_USE_TOOLCHAIN=1
    - ARROW_TRAVIS_PLASMA=1
    - ARROW_TRAVIS_ORC=0
    - ARROW_TRAVIS_PARQUET=0
    - ARROW_TRAVIS_GANDIVA=0
    - ARROW_BUILD_WARNING_LEVEL=CHECKIN
    - CC="clang-6.0"
    - CXX="clang++-6.0"
    before_script:
    - if [ $ARROW_CI_CPP_AFFECTED != "1" ]; then exit; fi
    - $TRAVIS_BUILD_DIR/ci/travis_install_linux.sh
    - $TRAVIS_BUILD_DIR/ci/travis_install_clang_tools.sh
    # If either C++ or Python changed, we must install the C++ libraries
    - git submodule update --init
    - $TRAVIS_BUILD_DIR/ci/travis_before_script_cpp.sh
    script:
    - $TRAVIS_BUILD_DIR/ci/travis_script_cpp.sh || travis_terminate 1
  # Separating Valgrind and C++ coverage makes individual jobs shorter
  - name: "C++ unit tests w/ gcc 4.8, coverage"
    compiler: gcc
    language: cpp
    os: linux
    jdk: openjdk8
    env:
    - ARROW_TRAVIS_USE_TOOLCHAIN=1
    - ARROW_TRAVIS_PLASMA=1
    - ARROW_TRAVIS_ORC=0
    - ARROW_TRAVIS_COVERAGE=0
    - ARROW_TRAVIS_PARQUET=0
    - ARROW_TRAVIS_GANDIVA=0
    - ARROW_TRAVIS_GANDIVA_JAVA=0
    - ARROW_BUILD_WARNING_LEVEL=CHECKIN
    before_script:
    - if [ $ARROW_CI_CPP_AFFECTED != "1" ] && [ $ARROW_CI_JAVA_AFFECTED != "1" ]; then exit; fi
    - $TRAVIS_BUILD_DIR/ci/travis_install_linux.sh
    - $TRAVIS_BUILD_DIR/ci/travis_install_clang_tools.sh
    # If either C++ or Python changed, we must install the C++ libraries
    - git submodule update --init
    - $TRAVIS_BUILD_DIR/ci/travis_before_script_cpp.sh
    script:
    - $TRAVIS_BUILD_DIR/ci/travis_script_cpp.sh || travis_terminate 1
    - $TRAVIS_BUILD_DIR/ci/travis_script_gandiva_java.sh || travis_terminate 1
    - $TRAVIS_BUILD_DIR/ci/travis_upload_cpp_coverage.sh || travis_terminate 1
    - echo "Printing plasma_store_server logs"
    - cat /tmp/log.stderr
    - cat /tmp/log.stdout
  - name: "[OS X] C++ w/ XCode 8.3"
    compiler: clang
    language: cpp
    osx_image: xcode8.3
    os: osx
    cache:
    addons:
    env:
    - ARROW_TRAVIS_USE_TOOLCHAIN=1
    - ARROW_TRAVIS_PLASMA=1
    - ARROW_TRAVIS_ORC=0
    - ARROW_TRAVIS_PARQUET=0
    - ARROW_TRAVIS_GANDIVA=0
    - ARROW_TRAVIS_GANDIVA_JAVA=0
    - ARROW_TRAVIS_OPTIONAL_INSTALL=0
    - ARROW_BUILD_WARNING_LEVEL=CHECKIN
    # ARROW-3803: The Xcode 8.3 image has Boost libraries in /usr/local/lib
    # which can get loaded before the toolchain Boost libraries. These seem to
    # get loaded even though we are modifying LD_LIBRARY_PATH. We build our own
    # Boost and statically link to get around the issue until this can be
    # investigated further
    - ARROW_TRAVIS_VENDORED_BOOST=1
    before_script:
    - if [ $ARROW_CI_CPP_AFFECTED != "1" ] && [ $ARROW_CI_JAVA_AFFECTED != "1" ]; then exit; fi
    # If either C++ or Python changed, we must install the C++ libraries
    - git submodule update --init
    - $TRAVIS_BUILD_DIR/ci/travis_before_script_cpp.sh
    script:
    - $TRAVIS_BUILD_DIR/ci/travis_script_cpp.sh || travis_terminate 1
    - $TRAVIS_BUILD_DIR/ci/travis_script_gandiva_java.sh
    - echo "Printing plasma_store_server logs"
    - cat /tmp/log.stderr
    - cat /tmp/log.stdout
  

after_failure:
- |
    if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      COREFILE=$(find /cores -maxdepth 1 -type f -name "core.*" | head -n 1)
      if [[ -f "$COREFILE" ]]; then
        lldb -c "$COREFILE" --batch --one-line "thread backtrace all -e true"
      fi
      ls -la ~/Library/Logs/DiagnosticReports/
      cat ~/Library/Logs/DiagnosticReports/*.crash
    else
      COREFILE=$(find . -maxdepth 2 -name "core*" | head -n 1)
      if [[ -f "$COREFILE" ]]; then
        gdb -c "$COREFILE" example -ex "thread apply all bt" -ex "set pagination 0" -batch
      fi
    fi

env:
  global:
  - secure: "GcrPtsKUCgNY7HKYjWlHQo8SiFrShDvdZSU8t1m1FJrE+UfK0Dgh9zXmAausM8GmhqSwkF0q4UbLQf2uCnSITWKeEPAL8Mo9eu4ib+ikJx/b3Sk81frgW5ADoHfW1Eyqd8xJNIMwMegJOtRLSDqiXh1CvMlKnY8PyTOGM2DgN9ona/v6p9OFH9Qs0JhBRVXAn0S4ztjumck8E56+01hqRfxbZ88pTfpKghBxYp9PJaMjtGdomjVWlqPaWaWJj+KptT8inV9NK+TVYKx0dXWD+S1Vgr1PytQnLdILOYV23gsOBYqn33ByF/yADl4m3hUjU/qeT0Fi7aWxmVpj+oTJISOSH5N8nIsuNH8mQk2ZzzXHfV7btFvP+cOPRczadoKkT6D6cHA8nQ7b0dphC6bl6SAeSfc/cbhRT+fYnIjg8jFXC8jlyWBr7LR6GXVpc0bND7i300ITo0FuRJhy2OxqPtGo3dKLE7eAcv78tuO0OYJ/kol1PEqFdFkbYbNVbg/cFpbGqiCXDsOtPDbAGBv69YnXdVowSxxs8cRGjSkDydv6ZSytb/Zd4lH/KAomcFNk8adx12O1Lk4sbmVav1cGig5P6OcQKS0jC5IiRb4THcQzVzAkXXbaafKm5sru/NoYxhzmkyhkOc11nTYHKVng+XKWzLCNn7pTTSLitp5+xa4="
